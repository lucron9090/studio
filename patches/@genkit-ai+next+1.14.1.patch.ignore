diff --git a/node_modules/@genkit-ai/next/package.json b/node_modules/@genkit-ai/next/package.json
index 3254924..704fcc0 100644
--- a/node_modules/@genkit-ai/next/package.json
+++ b/node_modules/@genkit_ai/next/package.json
@@ -35,5 +35,8 @@
   "peerDependencies": {
     "next": ">=14.1.0"
+  },
+  "exports": {
+    ".": "./lib/index.js",
+    "./loader": "./lib/loader.js"
   }
 }
diff --git a/node_modules/@genkit-ai/next/lib/index.js b/node_modules/@genkit-ai/next/lib/index.js
index 99a531b..4fd36b0 100644
--- a/node_modules/@genkit-ai/next/lib/index.js
+++ b/node_modules/@genkit_ai/next/lib/index.js
@@ -34,31 +34,7 @@ function genkit(config) {
     };
     const newWebpack = (webpackConfig, webpackOptions) => {
         webpackConfig.module.rules.push({
-            test: /\.prompt$/,
-            use: [
-                {
-                    loader: '@genkit-ai/dotprompt/loader',
-                    options: {},
-                },
-            ],
+            test: /\.prompt$/, use: [
+                { loader: '@genkit-ai/dotprompt/loader' },
+            ]
         });
-        // TODO: Figure out why this is being called from the client.
-        if (webpackOptions.isServer) {
-            //
-        }
         return config.webpack ? config.webpack(webpackConfig, webpackOptions) : webpackConfig;
     };
-    //
     return { ...config, webpack: newWebpack };
 }
 exports.genkit = genkit;
-function createNextApiHandler(options) {
-    const handler = (0, index_1.createFlowsHandler)(options);
-    return async (req) => {
-        if (req.method !== 'POST') {
-            return new Response(null, { status: 404 });
-        }
-        const { data: input } = await req.json();
-        const result = await handler(input);
-        return new Response(JSON.stringify(result));
-    };
-}
-exports.createNextApiHandler = createNextApiHandler;
diff --git a/node_modules/@genkit-ai/next/lib/index.mjs b/node_modules/@genkit-ai/next/lib/index.mjs
index 455e96b..1d3e8e4 100644
--- a/node_modules/@genkit-ai/next/lib/index.mjs
+++ b/node_modules/@genkit_ai/next/lib/index.mjs
@@ -16,19 +16,9 @@
     };
     const newWebpack = (webpackConfig, webpackOptions) => {
         webpackConfig.module.rules.push({
-            test: /\.prompt$/,
-            use: [
-                {
-                    loader: '@genkit-ai/dotprompt/loader',
-                    options: {},
-                },
-            ],
+            test: /\.prompt$/, use: [
+                { loader: '@genkit-ai/dotprompt/loader' },
+            ]
         });
         // TODO: Figure out why this is being called from the client.
-        if (webpackOptions.isServer) {
-            //
-        }
         return config.webpack ? config.webpack(webpackConfig, webpackOptions) : webpackConfig;
     };
-    //
     return { ...config, webpack: newWebpack };
 }
-export function createNextApiHandler(options) {
-    const handler = createFlowsHandler(options);
-    return async (req) => {
-        if (req.method !== 'POST') {
-            return new Response(null, { status: 404 });
-        }
-        const { data: input } = await req.json();
-        const result = await handler(input);
-        return new Response(JSON.stringify(result));
-    };
-}
